// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	model "github.com/LuisTejedaS/ondemand-go-bootcamp/domain/model"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// PokemonPresenter is an autogenerated mock type for the PokemonPresenter type
type PokemonPresenter struct {
	mock.Mock
}

// ResponsePokemon provides a mock function with given fields: p
func (_m *PokemonPresenter) ResponsePokemon(p *model.Pokemon) *model.Pokemon {
	ret := _m.Called(p)

	var r0 *model.Pokemon
	if rf, ok := ret.Get(0).(func(*model.Pokemon) *model.Pokemon); ok {
		r0 = rf(p)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Pokemon)
		}
	}

	return r0
}

// ResponsePokemons provides a mock function with given fields: p
func (_m *PokemonPresenter) ResponsePokemons(p []*model.Pokemon) []*model.Pokemon {
	ret := _m.Called(p)

	var r0 []*model.Pokemon
	if rf, ok := ret.Get(0).(func([]*model.Pokemon) []*model.Pokemon); ok {
		r0 = rf(p)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*model.Pokemon)
		}
	}

	return r0
}

// NewPokemonPresenter creates a new instance of PokemonPresenter. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewPokemonPresenter(t testing.TB) *PokemonPresenter {
	mock := &PokemonPresenter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
