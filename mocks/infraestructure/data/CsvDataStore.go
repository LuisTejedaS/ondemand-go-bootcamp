// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// CsvDataStore is an autogenerated mock type for the CsvDataStore type
type CsvDataStore struct {
	mock.Mock
}

// SaveRecord provides a mock function with given fields: record
func (_m *CsvDataStore) SaveRecord(record []string) error {
	ret := _m.Called(record)

	var r0 error
	if rf, ok := ret.Get(0).(func([]string) error); ok {
		r0 = rf(record)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveRecords provides a mock function with given fields: record
func (_m *CsvDataStore) SaveRecords(record [][]string) error {
	ret := _m.Called(record)

	var r0 error
	if rf, ok := ret.Get(0).(func([][]string) error); ok {
		r0 = rf(record)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCsvDataStore creates a new instance of CsvDataStore. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewCsvDataStore(t testing.TB) *CsvDataStore {
	mock := &CsvDataStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
